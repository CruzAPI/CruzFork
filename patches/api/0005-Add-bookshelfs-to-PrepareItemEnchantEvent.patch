From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CruzAPI <guilhermecruz1574@gmail.com>
Date: Sun, 25 Aug 2024 16:57:13 -0300
Subject: [PATCH] Add bookshelfs to PrepareItemEnchantEvent


diff --git a/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java b/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
index 27564727edbd9f093e3a021ce6f30e1146a8ddbb..99cf16e0729e2193d7b78e63c4c19e2d1c9be09e 100644
--- a/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
+++ b/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
@@ -10,6 +10,8 @@ import org.bukkit.inventory.ItemStack;
 import org.bukkit.inventory.view.EnchantmentView;
 import org.jetbrains.annotations.NotNull;
 
+import java.util.List;
+
 /**
  * Called when an ItemStack is inserted in an enchantment table - can be
  * called multiple times
@@ -19,17 +21,19 @@ public class PrepareItemEnchantEvent extends InventoryEvent implements Cancellab
     private final Block table;
     private final ItemStack item;
     private final EnchantmentOffer[] offers;
-    private final int bonus;
+    private final List<Block> bookshelves;
     private boolean cancelled;
     private final Player enchanter;
+    private boolean alreadyEnchanting;
 
-    public PrepareItemEnchantEvent(@NotNull final Player enchanter, @NotNull EnchantmentView view, @NotNull final Block table, @NotNull final ItemStack item, @org.jetbrains.annotations.Nullable final EnchantmentOffer @NotNull [] offers, final int bonus) { // Paper - offers can contain null values
+    public PrepareItemEnchantEvent(@NotNull final Player enchanter, @NotNull EnchantmentView view, @NotNull final Block table, @NotNull final ItemStack item, @org.jetbrains.annotations.Nullable final EnchantmentOffer @NotNull [] offers, @NotNull final List<Block> bookshelves, final boolean alreadyEnchanting) { // Paper - offers can contain null values
         super(view);
         this.enchanter = enchanter;
         this.table = table;
         this.item = item;
         this.offers = offers;
-        this.bonus = bonus;
+        this.bookshelves = bookshelves;
+        this.alreadyEnchanting = alreadyEnchanting;
     }
 
     /**
@@ -96,7 +100,7 @@ public class PrepareItemEnchantEvent extends InventoryEvent implements Cancellab
      * @return enchantment bonus
      */
     public int getEnchantmentBonus() {
-        return bonus;
+        return bookshelves.size();
     }
 
     @NotNull
@@ -105,6 +109,16 @@ public class PrepareItemEnchantEvent extends InventoryEvent implements Cancellab
         return (EnchantmentView) super.getView();
     }
 
+    public List<Block> getBookshelves()
+    {
+        return bookshelves;
+    }
+    
+    public boolean isAlreadyEnchanting()
+    {
+        return alreadyEnchanting;
+    }
+    
     @Override
     public boolean isCancelled() {
         return cancelled;
