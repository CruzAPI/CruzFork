From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CruzAPI <guilhermecruz1574@gmail.com>
Date: Sun, 29 Sep 2024 21:31:45 -0300
Subject: [PATCH] Add StructureAgeEvent


diff --git a/src/main/java/org/bukkit/event/world/StructureAgeEvent.java b/src/main/java/org/bukkit/event/world/StructureAgeEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..0d11ab3b28acf66d508193a00368e49c0f0f5caa
--- /dev/null
+++ b/src/main/java/org/bukkit/event/world/StructureAgeEvent.java
@@ -0,0 +1,95 @@
+package org.bukkit.event.world;
+
+import org.bukkit.Location;
+import org.bukkit.TreeType;
+import org.bukkit.block.BlockState;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.List;
+
+public class StructureAgeEvent extends WorldEvent implements Cancellable
+{
+    private static final HandlerList handlers = new HandlerList();
+    
+    private final Location location;
+    private final TreeType species;
+    private final boolean bonemeal;
+    private final Player player;
+
+    private boolean cancelled;
+    
+    public StructureAgeEvent(@NotNull final Location location, @NotNull final TreeType species, final boolean bonemeal, @Nullable final Player player)
+    {
+        super(location.getWorld());
+        this.location = location;
+        this.species = species;
+        this.bonemeal = bonemeal;
+        this.player = player;
+    }
+
+    /**
+     * Gets the location of the structure.
+     *
+     * @return Location of the structure
+     */
+    @NotNull
+    public Location getLocation() {
+        return location.clone();
+    }
+
+    /**
+     * Gets the species type (birch, normal, pine, red mushroom, brown
+     * mushroom)
+     *
+     * @return Structure species
+     */
+    @NotNull
+    public TreeType getSpecies() {
+        return species;
+    }
+
+    /**
+     * Checks if structure was grown using bonemeal.
+     *
+     * @return True if the structure was grown using bonemeal.
+     */
+    public boolean isFromBonemeal() {
+        return bonemeal;
+    }
+
+    /**
+     * Gets the player that created the structure.
+     *
+     * @return Player that created the structure, null if was not created
+     *     manually
+     */
+    @Nullable
+    public Player getPlayer() {
+        return player;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
