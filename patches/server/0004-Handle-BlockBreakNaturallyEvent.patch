From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CruzAPI <guilhermecruz1574@gmail.com>
Date: Thu, 22 Aug 2024 22:05:18 -0300
Subject: [PATCH] Handle BlockBreakNaturallyEvent


diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index ac11f18690434922179b61ffcc3036dea025b0cb..2ade12f3ca96794f6effce70b705549b764ae999 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.block;
 
+import com.eul4.event.block.BlockBreakNaturallyEvent;
 import com.google.common.base.Preconditions;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -11,6 +12,7 @@ import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
+import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.item.BoneMealItem;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.context.UseOnContext;
@@ -18,6 +20,7 @@ import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LightLayer;
 import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.LevelEvent;
 import net.minecraft.world.level.block.RedStoneWireBlock;
 import net.minecraft.world.level.block.SaplingBlock;
 import net.minecraft.world.phys.AABB;
@@ -50,6 +53,7 @@ import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.craftbukkit.util.CraftRayTraceResult;
 import org.bukkit.craftbukkit.util.CraftVoxelShape;
 import org.bukkit.entity.Entity;
+import org.bukkit.entity.Item;
 import org.bukkit.entity.Player;
 import org.bukkit.event.block.BlockFertilizeEvent;
 import org.bukkit.event.world.StructureGrowEvent;
@@ -506,23 +510,62 @@ public class CraftBlock implements Block {
         net.minecraft.world.level.block.Block block = iblockdata.getBlock();
         net.minecraft.world.item.ItemStack nmsItem = CraftItemStack.asNMSCopy(item);
         boolean result = false;
-
+        
+        ServerLevel serverLevel = this.world.getMinecraftWorld();
+        int xp = iblockdata.getBlock().getExpDrop(iblockdata, serverLevel, position, nmsItem, true);
+        List<Item> items = new ArrayList<>();
+        BlockBreakNaturallyEvent event = new BlockBreakNaturallyEvent(this, xp, triggerEffect, dropExperience, items);
         // Modelled off EntityHuman#hasBlock
         if (block != Blocks.AIR && (item == null || !iblockdata.requiresCorrectToolForDrops() || nmsItem.isCorrectToolForDrops(iblockdata))) {
+            serverLevel.captureDrops = new ArrayList<>();
             net.minecraft.world.level.block.Block.dropResources(iblockdata, this.world.getMinecraftWorld(), this.position, this.world.getBlockEntity(this.position), null, nmsItem, false); // Paper - Properly handle xp dropping
-            // Paper start - improve Block#breanNaturally
-            if (triggerEffect) {
-                if (iblockdata.getBlock() instanceof net.minecraft.world.level.block.BaseFireBlock) {
-                    this.world.levelEvent(net.minecraft.world.level.block.LevelEvent.SOUND_EXTINGUISH_FIRE, this.position, 0);
-                } else {
-                    this.world.levelEvent(net.minecraft.world.level.block.LevelEvent.PARTICLES_DESTROY_BLOCK, this.position, net.minecraft.world.level.block.Block.getId(iblockdata));
-                }
+            
+            for(ItemEntity itemEntity : serverLevel.captureDrops)
+            {
+                items.add((Item) itemEntity.getBukkitEntity());
             }
-            if (dropExperience) block.popExperience(this.world.getMinecraftWorld(), this.position, block.getExpDrop(iblockdata, this.world.getMinecraftWorld(), this.position, nmsItem, true));
-            // Paper end
+            serverLevel.captureDrops = null;
+            
             result = true;
         }
-
+        
+        if(!event.callEvent())
+        {
+            return false;
+        }
+        
+        items = event.getItems();
+        dropExperience = event.getDropExperience();
+        xp = event.getExpToDrop();
+        triggerEffect = event.getTriggerEffect();
+        
+        for(Item bukkitItem : items)
+        {
+            if(!bukkitItem.isValid())
+            {
+                net.minecraft.world.entity.Entity entity = ((org.bukkit.craftbukkit.entity.CraftItem) bukkitItem).getHandle();
+                entity.level().addFreshEntity(entity);
+            }
+        }
+        
+        if(triggerEffect)
+        {
+            if(iblockdata.getBlock() instanceof net.minecraft.world.level.block.BaseFireBlock)
+            {
+                this.world.levelEvent(LevelEvent.SOUND_EXTINGUISH_FIRE, this.position, 0);
+            }
+            else
+            {
+                this.world.levelEvent(LevelEvent.PARTICLES_DESTROY_BLOCK,
+                    this.position,
+                    net.minecraft.world.level.block.Block.getId(iblockdata));
+            }
+        }
+        
+        if(dropExperience)
+        {
+            iblockdata.getBlock().popExperience(serverLevel, position, xp, null);
+        }
         // SPIGOT-6778: Directly call setBlock instead of setTypeAndData, so that the tile entiy is not removed and custom remove logic is run.
         // Paper start - improve breakNaturally
         boolean destroyed = this.world.removeBlock(this.position, false);
