From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CruzAPI <guilhermecruz1574@gmail.com>
Date: Wed, 21 Aug 2024 22:37:47 -0300
Subject: [PATCH] Handle items in BlockDestroyEvent


diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index e2a0487089eb5a7bdc1433e4c75f69d8e9f9d5f9..4b036756ec8365d14fa511c46dc5e30d93bcb6a2 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -3,9 +3,7 @@ package net.minecraft.world.level;
 import com.google.common.collect.Lists;
 import com.mojang.serialization.Codec;
 import java.io.IOException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Objects;
+import java.util.*;
 import java.util.function.Consumer;
 import java.util.function.Predicate;
 import java.util.function.Supplier;
@@ -85,8 +83,6 @@ import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.scores.Scoreboard;
 
 // CraftBukkit start
-import java.util.HashMap;
-import java.util.Map;
 import net.minecraft.network.protocol.game.ClientboundSetBorderCenterPacket;
 import net.minecraft.network.protocol.game.ClientboundSetBorderLerpSizePacket;
 import net.minecraft.network.protocol.game.ClientboundSetBorderSizePacket;
@@ -99,6 +95,7 @@ import org.bukkit.craftbukkit.block.CapturedBlockState;
 import org.bukkit.craftbukkit.block.CraftBlockState;
 import org.bukkit.craftbukkit.block.data.CraftBlockData;
 import org.bukkit.craftbukkit.util.CraftSpawnCategory;
+import org.bukkit.entity.Item;
 import org.bukkit.entity.SpawnCategory;
 import org.bukkit.event.block.BlockPhysicsEvent;
 // CraftBukkit end
@@ -1174,6 +1171,16 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
         if (iblockdata.isAir()) {
             return false;
         } else {
+            BlockEntity tileentity = iblockdata.hasBlockEntity() ? this.getBlockEntity(pos) : null;
+            List<ItemEntity> captureDrops = this.captureDrops = new ArrayList<>();
+            Block.dropResources(iblockdata, this, pos, tileentity, breakingEntity, ItemStack.EMPTY, false); // Paper - Properly handle xp dropping
+            this.captureDrops = null;
+            
+            List<Item> items = new ArrayList<>();
+            for (ItemEntity item : captureDrops) {
+                items.add((Item) item.getBukkitEntity());
+            }
+            
             FluidState fluid = this.getFluidState(pos);
             // Paper start - BlockDestroyEvent; while the above setAir method is named same and looks very similar
             // they are NOT used with same intent and the above should not fire this event. The above method is more of a BlockSetToAirEvent,
@@ -1182,7 +1189,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
             BlockState effectType = iblockdata;
             int xp = iblockdata.getBlock().getExpDrop(iblockdata, (ServerLevel) this, pos, ItemStack.EMPTY, true);
             if (com.destroystokyo.paper.event.block.BlockDestroyEvent.getHandlerList().getRegisteredListeners().length > 0) {
-                com.destroystokyo.paper.event.block.BlockDestroyEvent event = new com.destroystokyo.paper.event.block.BlockDestroyEvent(org.bukkit.craftbukkit.block.CraftBlock.at(this, pos), fluid.createLegacyBlock().createCraftBlockData(), effectType.createCraftBlockData(), xp, drop);
+                com.destroystokyo.paper.event.block.BlockDestroyEvent event = new com.destroystokyo.paper.event.block.BlockDestroyEvent(org.bukkit.craftbukkit.block.CraftBlock.at(this, pos), fluid.createLegacyBlock().createCraftBlockData(), effectType.createCraftBlockData(), xp, drop, items);
                 if (!event.callEvent()) {
                     return false;
                 }
@@ -1190,6 +1197,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
                 playEffect = event.playEffect();
                 drop = event.willDrop();
                 xp = event.getExpToDrop();
+                items = event.getItems();
             }
             // Paper end - BlockDestroyEvent
 
@@ -1198,9 +1206,12 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
             }
 
             if (drop) {
-                BlockEntity tileentity = iblockdata.hasBlockEntity() ? this.getBlockEntity(pos) : null;
-
-                Block.dropResources(iblockdata, this, pos, tileentity, breakingEntity, ItemStack.EMPTY, false); // Paper - Properly handle xp dropping
+                for (Item bukkitItem : items) {
+                    if (!bukkitItem.isValid()) {
+                        Entity item = ((org.bukkit.craftbukkit.entity.CraftItem) bukkitItem).getHandle();
+                        item.level().addFreshEntity(item);
+                    }
+                }
                 iblockdata.getBlock().popExperience((ServerLevel) this, pos, xp, breakingEntity); // Paper - Properly handle xp dropping; custom amount
             }
 
