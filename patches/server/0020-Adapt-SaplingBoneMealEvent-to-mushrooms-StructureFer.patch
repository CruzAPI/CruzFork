From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CruzAPI <guilhermecruz1574@gmail.com>
Date: Mon, 30 Sep 2024 10:27:39 -0300
Subject: [PATCH] Adapt SaplingBoneMealEvent to mushrooms ->
 StructureFertilizeEvent


diff --git a/src/main/java/net/minecraft/world/level/block/MushroomBlock.java b/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
index 1172d85c5c26ab2142343d91149766e5993cb36a..e81b63e95489dbc425ca312ce7a2174dfb59ca3a 100644
--- a/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
@@ -1,5 +1,6 @@
 package net.minecraft.world.level.block;
 
+import com.eul4.event.block.StructureFertilizeEvent;
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.Iterator;
@@ -11,6 +12,7 @@ import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelReader;
@@ -20,7 +22,10 @@ import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 // CraftBukkit start
+import org.bukkit.Bukkit;
 import org.bukkit.TreeType;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
 // CraftBukkit end
 
 public class MushroomBlock extends BushBlock implements BonemealableBlock {
@@ -119,7 +124,17 @@ public class MushroomBlock extends BushBlock implements BonemealableBlock {
     public boolean isValidBonemealTarget(LevelReader world, BlockPos pos, BlockState state) {
         return true;
     }
-
+    
+    @Override
+    public boolean isBonemealSuccess(Level world, RandomSource random, BlockPos pos,
+        net.minecraft.world.level.block.state.BlockState state, ItemStack stack)
+    {
+        StructureFertilizeEvent event = new StructureFertilizeEvent(CraftBlock.at(world, pos), 0.4F, CraftItemStack.asBukkitCopy(stack));
+        Bukkit.getPluginManager().callEvent(event);
+        
+        return !event.isCancelled() && world.random.nextFloat() < event.getChance();
+    }
+    
     @Override
     public boolean isBonemealSuccess(Level world, RandomSource random, BlockPos pos, BlockState state) {
         return (double) random.nextFloat() < 0.4D;
diff --git a/src/main/java/net/minecraft/world/level/block/SaplingBlock.java b/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
index 240fe8a4d1bdac619ec61cf958e29ee8e239ad22..170a48e0da23c26ccb714e7c96e2fa42404ba214 100644
--- a/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
@@ -1,6 +1,6 @@
 package net.minecraft.world.level.block;
 
-import com.eul4.event.block.SaplingBoneMealEvent;
+import com.eul4.event.block.StructureFertilizeEvent;
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
 import net.minecraft.core.BlockPos;
@@ -42,7 +42,8 @@ public class SaplingBlock extends BushBlock implements BonemealableBlock {
     protected static final VoxelShape SHAPE = Block.box(2.0D, 0.0D, 2.0D, 14.0D, 12.0D, 14.0D);
     protected final TreeGrower treeGrower;
     public static TreeType treeType; // CraftBukkit
-
+    public static boolean fromBonemeal;
+    
     @Override
     public MapCodec<? extends SaplingBlock> codec() {
         return SaplingBlock.CODEC;
@@ -70,7 +71,7 @@ public class SaplingBlock extends BushBlock implements BonemealableBlock {
     public void advanceTree(ServerLevel world, BlockPos pos, net.minecraft.world.level.block.state.BlockState state, RandomSource random) {
         Location location = CraftLocation.toBukkit(pos, world.getWorld());
         
-        if(!new StructureAgeEvent(location, SaplingBlock.treeType, false, null).callEvent())
+        if(!new StructureAgeEvent(location, SaplingBlock.treeType, fromBonemeal).callEvent())
         {
             return;
         }
@@ -117,9 +118,8 @@ public class SaplingBlock extends BushBlock implements BonemealableBlock {
     public boolean isBonemealSuccess(Level world, RandomSource random, BlockPos pos,
         net.minecraft.world.level.block.state.BlockState state, ItemStack stack)
     {
-        SaplingBoneMealEvent event = new SaplingBoneMealEvent(CraftBlock.at(world, pos), 0.45F, CraftItemStack.asBukkitCopy(stack));
+        StructureFertilizeEvent event = new StructureFertilizeEvent(CraftBlock.at(world, pos), 0.45F, CraftItemStack.asBukkitCopy(stack));
         Bukkit.getPluginManager().callEvent(event);
-        
         return !event.isCancelled() && world.random.nextFloat() < event.getChance();
     }
     
@@ -130,7 +130,9 @@ public class SaplingBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     public void performBonemeal(ServerLevel world, RandomSource random, BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
+        fromBonemeal = true;
         this.advanceTree(world, pos, state, random);
+        fromBonemeal = false;
     }
 
     @Override
